@mixin linear-gradient-bound($color1, $color2, $direction: false){
	@if $direction == false{
		background: -webkit-linear-gradient(top, $color1 0%, $color2 100%);
		background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$color1), color-stop(100%, $color2));
		background: -moz-linear-gradient(top, $color1 0%, $color2 100%);
		background: -ms-linear-gradient(top, $color1 0%, $color2 100%);
		background: -o-linear-gradient(top, $color1 0%, $color2 100%);
		background: linear-gradient(to bottom, $color1 0%, $color2 100%);
	}

	@if $direction == 'horizontal'{
		background: -webkit-linear-gradient(left, $color1 0%, $color2 100%);
		background: -webkit-gradient(linear, left top, right top, color-stop(0%, $color1), color-stop(100%,rgba(255,255,255,0.01)));
		background: -moz-linear-gradient(left, $color1 0%, $color2 100%);
		background: -ms-linear-gradient(left, $color1 0%, $color2 100%);
		background: -o-linear-gradient(left, $color1 0%, $color2 100%);
		background: linear-gradient(to right, $color1 0%, $color2 100%);
	}
}

@mixin prefixes($property, $str){
	#{-webkit-}#{$property}: #{$str};
	   #{-moz-}#{$property}: #{$str};
	    #{-ms-}#{$property}: #{$str};
	     #{-o-}#{$property}: #{$str};
	           #{$property}: #{$str};
}

@mixin str-prefixes($property, $str){
	#{$property}: #{-webkit-}#{$str};
	#{$property}:    #{-moz-}#{$str};
	#{$property}:     #{-ms-}#{$str};
	#{$property}:      #{-o-}#{$str};
	#{$property}:            #{$str};
}

@mixin keyframes($name){
	@-webkit-keyframes #{$name}{
		@content;
	}

	@-moz-keyframes #{$name}{
		@content;
	}

	@-ms-keyframes #{$name}{
		@content;
	}

	@keyframes #{$name}{
		@content;
	}
}

@mixin linear-gradient($str){
	@include str-prefixes('background', linear-gradient(#{$str}));
}

//@include linear-gradient('top, #7cd4eb 0%, #8beafd 50%, #b3f3fe 51%, #b3f3fe 100%');

@mixin radial-gradient($str){
	@include str-prefixes('background', radial-gradient(#{$str}));
}

//@include radial-gradient('center, ellipse cover, #feffff 0%, #d2ebf9 100%');

@mixin calc($str, $property: 'width'){
	@include str-prefixes($property, calc(#{$str}));
}

@mixin animation($str){
	@include prefixes('animation', $str);
}

@mixin background-size($str){
	@include prefixes('background-size', $str);
}

@mixin transition($str){
	@include prefixes('transition', $str);
}

@mixin transition-property($str){
	@include prefixes('transition-property', $str);
}

@mixin transition-duration($str){
	@include prefixes('transition-duration', $str);
}

@mixin transition-timing-function($str){
	@include prefixes('transition-timing-function', $str);
}

@mixin transition-delay($str){
	@include prefixes('transition-delay', $str);
}

@mixin box-shadow($str){
	@include prefixes('box-shadow', $str);
}

@mixin perspective($str){
	@include prefixes('perspective', $str);
}

@mixin perspective-origin($str){
	@include prefixes('perspective-origin', $str);
}

@mixin transform($str){
	@include prefixes('transform', $str);
}

@mixin transform-style($str){
	@include prefixes('transform-style', $str);
}

@mixin transform-origin($str){
	@include prefixes('transform-origin', $str);
}

@mixin placeholder(){
	&amp;::-moz-placeholder{
		@content;
	}

	&amp;:-moz-placeholder{
		@content;
	}

	&amp;:-ms-input-placeholder{
		@content;
	}

	&amp;::-webkit-input-placeholder{
		@content;
	}

	&amp;::placeholder{
		@content;
	}

	&amp;::input-placeholder{
		@content;
	}
}

%normalize_btn{
	position: relative;
	display: inline-block;
	overflow: visible;
	vertical-align: middle;
	cursor: pointer;	
	border: 0;
	
	@extend %unselectable;
	
	span{
		display: inline-block;
		pointer-events: none;
		position: relative;
		left: 0;
		top: 0;
	}
}

%btn{
	@extend %normalize_btn;
	
	background: transparent no-repeat;
	padding: 0;
	font-size: 0;
	line-height: 0;

	&amp;[disabled],
	&amp;.disabled{
		opacity: 0.5;
		pointer-events: none;
		background-position: 0 0;
		cursor: default;
	}

	&amp;:hover,
	&amp;.hover{
		background-position: 0 center;
	}

	&amp;:active,
	&amp;.active{
		background-position: 0 bottom;
	}

}

%arr{
	@extend %btn;

	&amp;.prev{
		background-position: 0 0;

		&amp;.hover,
		&amp;:hover{
			background-position: 0 center;
		}

		&amp;.active,
		&amp;:active{
			background-position: 0 bottom;
		}
	}

	&amp;.next{

		&amp;, [disabled], &amp;.disabled{
			background-position: right 0;
		}

		&amp;.hover,
		&amp;:hover{
			background-position: right center;
		}

		&amp;.active,
		&amp;:active{
			background-position: right bottom;
		}
	}
}

%cross{
	@extend %btn;

	width: 14px;
	height: 14px;

	&amp;:before, &amp;:after{
		@include transform-origin(0 0);
		border-left: 1px solid;
		height: 100%;
		position: absolute;
		top: 50%; 
		left: 50%;
		content: '';
	}

	&amp;:before{
		@include transform(rotate(-45deg) translate(-50%, -50%));
		@include transform(rotate(-45deg) translate3d(-50%, -50%, 0));
	}

	&amp;:after{
		@include transform(rotate(45deg) translate(-50%, -50%));
		@include transform(rotate(45deg) translate3d(-50%, -50%, 0));
	}
}

%jt{ // justified
	text-align: justify;
	font-size: 2px;
	line-height: 0;

	&gt; *{
		display: inline-block;
		text-align: left;
		vertical-align: top;
	}

	&amp;:after{
		position: relative;
		content: '';
		display: inline-block;
		width: 100%;
		height: 0;
		visibility: hidden;
	}
}

%cf{ // clearfix
	&amp;:after{
		position: relative;
		content: '';
		display: table;
		clear: both;
	}
}

%show-active{
	display: none;

	&amp;.active{
		display: block;
	}
}

%unselectable{
	@include prefixes('user-select', 'none');
}

// %border-box{
// 	@include prefixes('box-sizing', 'border-box');
// }

%content-box{
	@include prefixes('box-sizing', 'content-box');
}

%vm{ // vertical-middle
	white-space: nowrap;

	&gt; *{
		display: inline-block;
		vertical-align: middle;
		white-space: normal;
	}

	&amp;:after{
		position: relative;
		content: '';
		display: inline-block;
		height: 100%;
		width: 0;
		vertical-align: middle;
	}
}

%pc{ // position: center	
	position: absolute;
	left: 50%; top: 50%;
	@include transform(translate(-50%, -50%));
}